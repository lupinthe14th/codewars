---
# SeeAlso: https://github.com/doughsay/afk/blob/master/.github/workflows/ci.yml 
name: CI
on:
  pull_request: ~
  push:
    branches:
      # These are the branches that we want CI to run on direct pushes.
      # All other changes should go through PRs.
      - master
    paths:
      - '**.ex'
      - '**.exs'

env:
  MIX_ENV: test

jobs:
  format:

    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [20.3, 21.3, 22.2]
        elixir: [1.8.2, 1.9.4]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.2.0
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Format Checks
        run: mix format --check-formatted

  compile:
    name: Compile
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [20.3, 21.3, 22.2]
        elixir: [1.8.2, 1.9.4]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.2.0
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/cache@v1
        id: cache-mix
        with:
          path: deps
          key: ${{ runner.os }}-mix-v5-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-v5-
      - uses: actions/cache@v1
        id: cache-build
        with:
          path: _build
          key: ${{ runner.os }}-build-v3-${{ hashFiles('lib/**/*.ex') }}${{ hashFiles('test/**/*.ex') }}${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-v3-
      - name: Install dependencies
        if: steps.cache-mix.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Compile
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: mix compile --warnings-as-errors

  test:
    name: Tests

    needs: compile

    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [20.3, 21.3, 22.2]
        elixir: [1.8.2, 1.9.4]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.2.0
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/cache@v1
        id: cache-mix
        with:
          path: deps
          key: ${{ runner.os }}-mix-v5-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-v5-
      - uses: actions/cache@v1
        id: cache-build
        with:
          path: _build
          key: ${{ runner.os }}-build-v3-${{ hashFiles('lib/**/*.ex') }}${{ hashFiles('test/**/*.ex') }}${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-v3-

      - name: Run tests
        run: mix coveralls.json
      - uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - uses: actions/labeler@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

  credo:
    name: Credo

    needs: compile

    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [20.3, 21.3, 22.2]
        elixir: [1.8.2, 1.9.4]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.2.0
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/cache@v1
        id: cache-mix
        with:
          path: deps
          key: ${{ runner.os }}-mix-v5-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-v5-
      - uses: actions/cache@v1
        id: cache-build
        with:
          path: _build
          key: ${{ runner.os }}-build-v3-${{ hashFiles('lib/**/*.ex') }}${{ hashFiles('test/**/*.ex') }}${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-v3-
      - name: Run credo
        run: mix credo --strict

  dialyzer:
    name: Dialyzer

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [20.3, 21.3, 22.2]
        elixir: [1.8.2, 1.9.4]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.2.0
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/cache@v1
        id: cache-build-dev
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-v3-${{ hashFiles('lib/**/*.ex') }}${{ hashFiles('test/**/*.ex') }}${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-build-dev-v3-
      - uses: actions/cache@v1
        with:
          path: plts
          key: ${{ runner.os }}-plts-v3-${{ hashFiles('lib/**/*.ex') }}${{ hashFiles('test/**/*.ex') }}${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-plts-v3-
      - name: Install dependencies
        run: mix deps.get
      - name: Compile
        if: steps.cache-build-dev.outputs.cache-hit != 'true'
        run: mix compile
      - name: Run dialyzer
        run: mix dialyzer
